<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog of Fengya</title>
    <description>A place for study # this means to ignore newlines until &quot;baseurl:&quot;
</description>
    <link>https://fengyalv.github.io/Blogs/</link>
    <atom:link href="https://fengyalv.github.io/Blogs/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 15 Apr 2016 18:03:37 +0800</pubDate>
    <lastBuildDate>Fri, 15 Apr 2016 18:03:37 +0800</lastBuildDate>
    <generator>Jekyll v3.1.2</generator>
    
      <item>
        <title>shell中的正则表达式和通配符</title>
        <description>&lt;h1 id=&quot;shell&quot;&gt;shell中的正则表达式和通配符&lt;/h1&gt;

&lt;h2 id=&quot;section&quot;&gt;正则表达式&lt;/h2&gt;

&lt;p&gt;正则表达式包含以下一个或多个组成部分&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;字符集：一组字符&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;锚：表领了正则表达式在文本中要匹配的位置。例如^和$&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;修饰符：用于展开或者缩小正则表达式匹配文本行的范围。例如*,(),\。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;section-1&quot;&gt;正则表达式主要的内容&lt;/h3&gt;

&lt;h4 id=&quot;section-2&quot;&gt;星号*&lt;/h4&gt;

&lt;p&gt;匹配前一个字符任意多次（含0）。&lt;/p&gt;

&lt;p&gt;例如：“123*”表示匹配12+任意多次的3&lt;/p&gt;

&lt;h4 id=&quot;section-3&quot;&gt;点.&lt;/h4&gt;

&lt;p&gt;匹配除了换行以外的任意一个字符&lt;/p&gt;

&lt;p&gt;例如：“12.”会匹配12+任意一个字符（包括空格），但不匹配12，因为这个位置少了一个字符&lt;/p&gt;

&lt;h4 id=&quot;section-4&quot;&gt;^&lt;/h4&gt;

&lt;p&gt;匹配一行的开头。也有可能表示否定一个字符集。&lt;/p&gt;

&lt;h4 id=&quot;section-5&quot;&gt;$&lt;/h4&gt;

&lt;p&gt;匹配行尾。&lt;/p&gt;

&lt;p&gt;因此可知“^$”可以用于匹配空行&lt;/p&gt;

&lt;h4 id=&quot;section-6&quot;&gt;方括号[]&lt;/h4&gt;

&lt;p&gt;表示匹配括号中的一个字符。&lt;/p&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;p&gt;“[xyz]”会匹配字符x或者y或者z&lt;/p&gt;

&lt;p&gt;“[c-n]”匹配从字符c到n之间的任意一个字符&lt;/p&gt;

&lt;p&gt;“[B-Pk-y]” 匹配从B到P 或从k到y的任意一个字符.&lt;/p&gt;

&lt;p&gt;“[a-z0-9]” 匹配任意小写字母或数字.&lt;/p&gt;

&lt;p&gt;”[^b-d]” 匹配除了从b到d范围内所有的字符. 这是正则表达式中反转意思或取否的一个例子。&lt;/p&gt;

&lt;h4 id=&quot;section-7&quot;&gt;反斜杠\&lt;/h4&gt;

&lt;p&gt;转义字符，使一个字符表示其字面上的意思。&lt;/p&gt;

&lt;h4 id=&quot;section-8&quot;&gt;尖角号（须转义）\&amp;lt;\&amp;gt;&lt;/h4&gt;

&lt;p&gt;表示单词的边界。&lt;/p&gt;

&lt;p&gt;例如：“\&amp;lt;the\&amp;gt;”会匹配单词the，但是不会匹配them等。&lt;/p&gt;

&lt;h3 id=&quot;section-9&quot;&gt;正则表达式的扩展符号&lt;/h3&gt;

&lt;h4 id=&quot;section-10&quot;&gt;问号？&lt;/h4&gt;

&lt;p&gt;匹配0个或者1个前面的字符&lt;/p&gt;

&lt;h4 id=&quot;section-11&quot;&gt;加号+&lt;/h4&gt;

&lt;p&gt;匹配1个或者多个前面的字符。与*相似，但是不匹配0个字符。&lt;/p&gt;

&lt;h4 id=&quot;section-12&quot;&gt;大括号\{\}（须转义）&lt;/h4&gt;

&lt;p&gt;指示前面正则表达式的匹配的次数。&lt;/p&gt;

&lt;p&gt;例如“[0-9]\{5\}”精确匹配5个数字。&lt;/p&gt;

&lt;h4 id=&quot;section-13&quot;&gt;圆括号()&lt;/h4&gt;

&lt;p&gt;括起一组正则表达式用于做或操作之类。&lt;/p&gt;

&lt;h4 id=&quot;section-14&quot;&gt;竖线|&lt;/h4&gt;

&lt;p&gt;或操作，用于匹配一组字符。&lt;/p&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;p&gt;“(0-5) | (a-c)”会匹配一个0-5的数字或者a-c的字母。&lt;/p&gt;

&lt;h3 id=&quot;posix&quot;&gt;POSIX字符类&lt;/h3&gt;

&lt;p&gt;[:alnum:] 匹配字母和数字.等同于A-Za-z0-9.&lt;/p&gt;

&lt;p&gt;[:alpha:] 匹配字母. 等同于A-Za-z.&lt;/p&gt;

&lt;p&gt;[:blank:] 匹配一个空格或是一个制表符(tab).&lt;/p&gt;

&lt;p&gt;[:cntrl:] 匹配控制字符.&lt;/p&gt;

&lt;p&gt;[:digit:] 匹配(十进制)数字. 等同于0-9.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[:graph:]&lt;/code&gt;(可打印的图形字符). 匹配 ASCII 码值的33 - 126之间的字符. 这和下面提到的[:print:]一样,但是不包括空格字符.&lt;/p&gt;

&lt;p&gt;[:lower:] 匹配小写字母. 等同于a-z.&lt;/p&gt;

&lt;p&gt;[:print:] (可打印字符). 匹配 ASCII码值 32 - 126之间的字符. 这和上面提到的&lt;code class=&quot;highlighter-rouge&quot;&gt;[​:graph:​]&lt;/code&gt; 一样,但是增多一个空格字符。&lt;/p&gt;

&lt;p&gt;[:space:] 匹配空白字符 (空格符和水平制表符).&lt;/p&gt;

&lt;p&gt;[:upper:] 匹配大写字母. 等同于A-Z.&lt;/p&gt;

&lt;p&gt;[:xdigit:] 匹配十六进制数字. 等同于0-9A-Fa-f.&lt;/p&gt;

&lt;h2 id=&quot;section-15&quot;&gt;通配符&lt;/h2&gt;

&lt;p&gt;Bash本身没有正则表达式的功能.在脚本里，使用正则表达式的是命令和软件包，例如sed和awk，它们可以解释正则表达式.&lt;/p&gt;

&lt;p&gt;Bash所做的是展开文件名扩展，这就是所谓的通配(globbing) ，但它不是使用标准的正则表达式. 而是使用通配符. 通配解释标准的通配符：和?, 方括号括起来的字符,还有其他的一些特殊的字符(比如说^用来表示取反匹配).然而通配机制的通配符有很大的局限性. 包含有号的字符串将不会匹配以点开头的文件，例如.bashrc另外,通配机制的? 字符和正则表达式中表示的意思不一样.&lt;/p&gt;

&lt;h3 id=&quot;section-16&quot;&gt;通配符种类&lt;/h3&gt;

&lt;h4 id=&quot;section-17&quot;&gt;星号*&lt;/h4&gt;

&lt;p&gt;匹配 0 或多个字符&lt;/p&gt;

&lt;h4 id=&quot;section-18&quot;&gt;问号？&lt;/h4&gt;

&lt;p&gt;匹配任意一个字符，但是必须有一个字符。&lt;/p&gt;

&lt;h4 id=&quot;list&quot;&gt;[list]&lt;/h4&gt;

&lt;p&gt;匹配 list 中的任意单一字符。注意只能有一个。&lt;/p&gt;

&lt;h4 id=&quot;list-1&quot;&gt;[!list]&lt;/h4&gt;

&lt;p&gt;匹配除了 list 中的任意单一字符。注意只能有一个。&lt;/p&gt;

&lt;h4 id=&quot;a-c&quot;&gt;[a-c]&lt;/h4&gt;

&lt;p&gt;匹配a到c的任一个字符&lt;/p&gt;

&lt;h4 id=&quot;string1string2&quot;&gt;{string1,string2…}&lt;/h4&gt;

&lt;p&gt;匹配括号里面的任一个字符串。&lt;/p&gt;
</description>
        <pubDate>Fri, 15 Apr 2016 00:00:00 +0800</pubDate>
        <link>https://fengyalv.github.io/Blogs/shell/shell%E8%84%9A%E6%9C%AC%E4%B8%AD%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html</link>
        <guid isPermaLink="true">https://fengyalv.github.io/Blogs/shell/shell%E8%84%9A%E6%9C%AC%E4%B8%AD%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html</guid>
        
        <category>shell</category>
        
        <category>linux</category>
        
        <category>mac</category>
        
        <category>正则表达式</category>
        
        <category>通配符</category>
        
        
        <category>shell</category>
        
      </item>
    
      <item>
        <title>shell脚本变量处理和扩展</title>
        <description>&lt;h1 id=&quot;shell&quot;&gt;shell脚本变量处理和扩展&lt;/h1&gt;

&lt;h2 id=&quot;section&quot;&gt;变量的类型&lt;/h2&gt;

&lt;h3 id=&quot;section-1&quot;&gt;局部变量&lt;/h3&gt;

&lt;p&gt;局部变量只在代码块或一个函数里有效&lt;/p&gt;

&lt;p&gt;如果变量用local来声明，那么它只能在该变量声明的代码块(block of code)中可见。这个代码块就是局部”范围”。 在一个函数内，局部变量意味着只能在函数代码块内它才有意义。&lt;/p&gt;

&lt;p&gt;例如如下代码：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;para1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;a&#39;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;func&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;para2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;b&#39;&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;para1:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;para1&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;para2:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;para2&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

func
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;para1:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;para1&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;para2:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;para2&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;输出为：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;para1:a
para2:b
para1:a
para2:
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-2&quot;&gt;变量的声明&lt;/h3&gt;

&lt;p&gt;declare或typeset内建命令(它们是完全相同的)可以用来限定变量的属性.这是在某些编程语言中使用的定义类型不严格的方式。命令declare是bash版本2之后才有的。命令typeset也可以在ksh脚本中运行。&lt;/p&gt;

&lt;h4 id=&quot;r&quot;&gt;-r只读&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;declare -r var&lt;/code&gt;等同于&lt;code class=&quot;highlighter-rouge&quot;&gt;readonly var&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;i&quot;&gt;-i整数&lt;/h4&gt;

&lt;p&gt;将变量认为是整数&lt;/p&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;6/3
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;declare&lt;/span&gt; -i n
&lt;span class=&quot;nv&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;6/3
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;输出为：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;6/3
2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;a&quot;&gt;-a数组&lt;/h4&gt;

&lt;h4 id=&quot;f&quot;&gt;-f函数&lt;/h4&gt;

&lt;p&gt;在脚本中没有带任何参数的declare -f 会列出所有在此脚本前面已定义的函数出来。而declare -f function_name则只会列出指定的函数。&lt;/p&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;abcd&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;abcd
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;cdef&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;cdef
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;declare&lt;/span&gt; -f
&lt;span class=&quot;nb&quot;&gt;echo
declare&lt;/span&gt; -f abcd
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;输出为：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;abcd ()
{
    echo aaa
}
cdef ()
{
    echo cdef
}

abcd ()
{
    echo aaa
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;f-1&quot;&gt;-F函数&lt;/h4&gt;

&lt;p&gt;显示所有的自定义函数的名称&lt;/p&gt;

&lt;p&gt;例如上述例子：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;declare&lt;/span&gt; -F
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;输出为：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;declare -f abcd
declare -f cdef
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;x-export&quot;&gt;-x export&lt;/h4&gt;

&lt;p&gt;这样将声明一个变量作为脚本的环境变量而被导出。&lt;/p&gt;

&lt;p&gt;类似的用法有：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;declare&lt;/span&gt; -x var
&lt;span class=&quot;nb&quot;&gt;typeset&lt;/span&gt; -x var
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;var
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;p-&quot;&gt;-p 变量&lt;/h4&gt;

&lt;p&gt;类似-f选项。不传参数会显示所有的变量的值。传参数只会显示对应的变量的值。&lt;/p&gt;

&lt;h2 id=&quot;section-3&quot;&gt;常用变量使用方法&lt;/h2&gt;

&lt;h3 id=&quot;parameter&quot;&gt;${parameter}&lt;/h3&gt;

&lt;p&gt;运行如下脚本：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;para&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;a&#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;para&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;运行结果为：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;其中para是脚本的变量。也可以简写为&lt;code class=&quot;highlighter-rouge&quot;&gt;$para&lt;/code&gt;的形式，但是在某种情况下可能会引起歧义。&lt;/p&gt;

&lt;p&gt;在一个双引号（” “）里的变量引用不会禁止变量替换。所以双引号被称为部分引用，有时也称为”弱引用”。而在一个单引号里(‘ ‘)的变量替换是被禁止的，变量名只被解释为普通的字面意思。所以单引号被称为”全局引用”，有时也被称为强引用。&lt;/p&gt;

&lt;p&gt;未初始化的变量又一个空的值（null）但是在算术运算中会按照0来计算。&lt;/p&gt;

&lt;p&gt;Bash不以”类型”来区分变量。本质上来说，Bash变量是字符串，但是根据环境的不同，Bash允许变量有整数计算和比较。其中的决定因素是变量的值是不是只含有数字。&lt;/p&gt;

&lt;h3 id=&quot;parameter-defaultparameter-default&quot;&gt;${parameter-default}, ${parameter:-default}&lt;/h3&gt;

&lt;p&gt;如果变量没有被设置，使用默认值。它们之间的差别是：当一个参数已被声明，但是值是NULL的时候两者不同。&lt;/p&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;a:&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;a:&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;a:&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;a:&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;b:&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:-&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;b&#39;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;b:&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;b:&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:-&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;b&#39;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;b:&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;a:a
a:
a:
a:
b:b
b:
b:b
b:
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;parameterdefaultparameterdefault&quot;&gt;${parameter=default}, ${parameter:=default}&lt;/h3&gt;

&lt;p&gt;如果变量parameter没有设置，把它设置成默认值.&lt;/p&gt;

&lt;p&gt;两种形式几乎相同，只是和上面的一样，只有当$parameter变量被声明且被设置成null值时不同&lt;/p&gt;

&lt;h3 id=&quot;parameteraltvalueparameteraltvalue&quot;&gt;${parameter+alt_value}, ${parameter:+alt_value}&lt;/h3&gt;

&lt;p&gt;如果变量parameter设置，使用alt_value作为新值，否则使用空字符串。&lt;/p&gt;

&lt;p&gt;除了引起的当变量被声明且值是空值时有些不同外，两种形式几乎相等。&lt;/p&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;a:&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;a:&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;b:&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;b&lt;/span&gt;:+&lt;span class=&quot;s1&quot;&gt;&#39;b&#39;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;b:&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;b&lt;/span&gt;:+&lt;span class=&quot;s1&quot;&gt;&#39;b&#39;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;a:&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;qqqqqqq
&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;a:&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;b:&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;b&lt;/span&gt;:+&lt;span class=&quot;s1&quot;&gt;&#39;b&#39;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;qqqqqqq
&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;b:&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;b&lt;/span&gt;:+&lt;span class=&quot;s1&quot;&gt;&#39;b&#39;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;运行结果为：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;a:
a:a
b:
b:
a:a
a:a
b:
b:b
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;parametererrmsgparametererrmsg&quot;&gt;${parameter?err_msg}, ${parameter:?err_msg}&lt;/h3&gt;

&lt;p&gt;如果变量parameter已经设置，则使用该值，否则打印err_msg错误信息。&lt;/p&gt;

&lt;p&gt;通常可以用于参数检查。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;: &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;qwe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;qwe doesnot exit&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;结果为：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bash: qwe: qwe doesnot exit
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-4&quot;&gt;变量的扩展&lt;/h2&gt;

&lt;h3 id=&quot;var&quot;&gt;${#var}&lt;/h3&gt;

&lt;p&gt;字符串的长度&lt;/p&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;aaa&#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${#&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;结果为：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;3
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;varpatternvarpattern&quot;&gt;${var#Pattern}, ${var##Pattern}&lt;/h3&gt;

&lt;p&gt;删除从$var前端开始的最短或最长匹配$Pattern的字符串。&lt;/p&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;abcd1234abcd1234abcd1234&#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;#*abcd&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;##*abcd&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;输出为：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1234abcd1234abcd1234
1234
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;varpatternvarpattern-1&quot;&gt;${var%Pattern}, ${var%%Pattern}&lt;/h3&gt;

&lt;p&gt;删除从$var后端开始的最短或最长匹配$Pattern的字符串。&lt;/p&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;abcd1234abcd1234abcd1234&#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;output:&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%abcd*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;output:&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%%abcd*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;输出为：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;output:abcd1234abcd1234
output:
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;varpos&quot;&gt;${var:pos}&lt;/h3&gt;

&lt;p&gt;变量var被展开成从位移pos个字符往后的值&lt;/p&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;abcd&#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;a&lt;/span&gt;:2&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;输出为：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;varposlen&quot;&gt;${var:pos:len}&lt;/h3&gt;

&lt;p&gt;从变量var中展开成从位移pos的字符往后最长为len的字符串。与上一个命令用法相仿。&lt;/p&gt;

&lt;h3 id=&quot;varpattenreplacement&quot;&gt;${var/Patten/Replacement}&lt;/h3&gt;

&lt;p&gt;在变量var第一个匹配Pattern的字符串用Replacement代替&lt;/p&gt;

&lt;h3 id=&quot;varpattenreplacement-1&quot;&gt;${var//Patten/Replacement}&lt;/h3&gt;

&lt;p&gt;所有在变量var中被Pattern匹配到的都由Replacement代替。&lt;/p&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;abcd1234abcd1234abcd&#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/abcd/1234&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;//abcd/1234&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;输出为：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;12341234abcd1234abcd
12341234123412341234
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;varpatternreplacement&quot;&gt;${var/#Pattern/Replacement}&lt;/h3&gt;

&lt;p&gt;如果变量&lt;em&gt;var&lt;/em&gt;的&lt;em&gt;前缀&lt;/em&gt;匹配模式&lt;em&gt;Pattern&lt;/em&gt;,则用&lt;em&gt;Replacement&lt;/em&gt;代替匹配模式的字符串.&lt;/p&gt;

&lt;h3 id=&quot;varpatternreplacement-1&quot;&gt;${var/%Pattern/Replacement}&lt;/h3&gt;

&lt;p&gt;如果变量var的后缀匹配模式Pattern,则用Replacement代替匹配模式的字符串.&lt;/p&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;abcd1234abcd1234abcd&#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/#ab/1234&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/%cd/1234&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/#bc/1234&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/%bc/1234&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;输出为：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1234cd1234abcd1234abcd
abcd1234abcd1234ab1234
abcd1234abcd1234abcd
abcd1234abcd1234abcd
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;varprefixvarprefix&quot;&gt;${!varprefix*}, ${!varprefix@}&lt;/h3&gt;

&lt;p&gt;匹配所有前面声明过的变量，并且变量名以varprefix开头.&lt;/p&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;abc1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1
&lt;span class=&quot;nv&quot;&gt;abc2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;a
&lt;span class=&quot;nv&quot;&gt;abc3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;!abc*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;!abc@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;输出为：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;abc1 abc2 abc3
abc1 abc2 abc3
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Thu, 14 Apr 2016 00:00:00 +0800</pubDate>
        <link>https://fengyalv.github.io/Blogs/shell/shell%E8%84%9A%E6%9C%AC%E5%8F%98%E9%87%8F%E5%A4%84%E7%90%86%E5%92%8C%E6%89%A9%E5%B1%95.html</link>
        <guid isPermaLink="true">https://fengyalv.github.io/Blogs/shell/shell%E8%84%9A%E6%9C%AC%E5%8F%98%E9%87%8F%E5%A4%84%E7%90%86%E5%92%8C%E6%89%A9%E5%B1%95.html</guid>
        
        <category>shell</category>
        
        <category>linux</category>
        
        <category>mac</category>
        
        <category>变量</category>
        
        
        <category>shell</category>
        
      </item>
    
      <item>
        <title>bash脚本内部变量</title>
        <description>&lt;h1 id=&quot;bash&quot;&gt;bash脚本内部变量&lt;/h1&gt;

&lt;h2 id=&quot;bash-1&quot;&gt;$BASH&lt;/h2&gt;

&lt;p&gt;bash的程序文件的路径，如/bin/bash&lt;/p&gt;

&lt;h2 id=&quot;bashenv&quot;&gt;$BASH_ENV&lt;/h2&gt;

&lt;p&gt;该环境变量保存一个Bash启动文件路径，当启动一个脚本程序时会去读该环境变量指定的文件。&lt;/p&gt;

&lt;p&gt;例如可以设置&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;export BASH_ENV=./testScript&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;这里testScript的内容为&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$BASH_ENV&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello world!&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;相当于我们每次运行一个bash脚本的时候都会去引用一下testScript这个文件。&lt;/p&gt;

&lt;p&gt;运行的结果为：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Hello world!&lt;/code&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;./testScript&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Hello world!&lt;/code&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;./testScript&lt;/code&gt;
相当于首先引用了一次testScript，打印出了前两行，然后执行testScript，打印出了后两行。我们可以利用这个变量引入一个文件来设置一些别名，设置一些常量之类。&lt;/p&gt;

&lt;h2 id=&quot;bashsubshell&quot;&gt;$BASH_SUBSHELL&lt;/h2&gt;

&lt;p&gt;一个指示子shell(subshell)等级的变量。它是Bash版本3新加入的。&lt;/p&gt;

&lt;p&gt;例如运行一下脚本：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$BASH_SUBSHELL&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$BASH_SUBSHELL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;输出内容为：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;这里()用于使用子shell（subshell）来执行命令。&lt;/p&gt;

&lt;p&gt;根据这个变量可以判断子shell等级，进行例如变量作用域判断之类的操作。&lt;/p&gt;

&lt;h2 id=&quot;bashversinfon&quot;&gt;$BASH_VERSINFO[n]&lt;/h2&gt;

&lt;p&gt;这个数组含有6个元素，指示了安装的Bash版本的信息。它和$BASH_VERSION相似，但它们还是有一些小小的不同。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# BASH_VERSINFO[0] = 3                      # 主版本号.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# BASH_VERSINFO[1] = 00                     # 次版本号.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# BASH_VERSINFO[2] = 14                     # 补丁级.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# BASH_VERSINFO[3] = 1                      # 编译版本.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# BASH_VERSINFO[4] = release                # 发行状态.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# BASH_VERSINFO[5] = i386-redhat-linux-gnu  # 结构体系&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;## $BASH_VERSION&lt;/p&gt;

&lt;p&gt;安装在系统里的Bash版本&lt;/p&gt;

&lt;p&gt;如运行&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;echo $BASH_VERSION&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;会得到&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;3.2.57(1)-release&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;dirstack&quot;&gt;$DIRSTACK&lt;/h2&gt;

&lt;p&gt;在目录堆栈里面最顶端的值(它受&lt;a href=&quot;http://manual.51yip.com/shell/internal.html#PUSHDREF&quot;&gt;pushd&lt;/a&gt;和&lt;a href=&quot;http://manual.51yip.com/shell/internal.html#POPDREF&quot;&gt;popd&lt;/a&gt;的控制)&lt;/p&gt;

&lt;p&gt;这个内建的变量和dirs命令相符，但dirs是给出整个目录堆栈的内容。&lt;/p&gt;

&lt;h2 id=&quot;editor&quot;&gt;$EDITOR&lt;/h2&gt;

&lt;p&gt;由脚本调用的默认的编辑器，一般是vi或是emacs。通常是没有设置的空变量。&lt;/p&gt;

&lt;h2 id=&quot;euid&quot;&gt;$EUID&lt;/h2&gt;

&lt;p&gt;有效用户id&lt;/p&gt;

&lt;h2 id=&quot;funcname&quot;&gt;$FUNCNAME&lt;/h2&gt;

&lt;p&gt;当前函数的名字&lt;/p&gt;

&lt;p&gt;例如运行以下bash脚本：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;HelloWorld&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$FUNCNAME&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$FUNCNAME&lt;/span&gt;
HelloWorld
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;得到的输出为：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; &lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;HelloWorld&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;第一行为空，第二行为函数名。&lt;/p&gt;

&lt;h2 id=&quot;globignore&quot;&gt;$GLOBIGNORE&lt;/h2&gt;

&lt;p&gt;由通配符(globbing)扩展的一列文件名模式&lt;/p&gt;

&lt;h2 id=&quot;groups&quot;&gt;$GROUPS&lt;/h2&gt;

&lt;p&gt;目前用户所属的组&lt;/p&gt;

&lt;p&gt;这是一个当前用户的group id的列表，记录在/etc/passwd和/etc/group中&lt;/p&gt;

&lt;h2 id=&quot;home&quot;&gt;$HOME&lt;/h2&gt;

&lt;p&gt;用户的家目录&lt;/p&gt;

&lt;p&gt;linux中如/home/username&lt;/p&gt;

&lt;p&gt;mac中如/User/username&lt;/p&gt;

&lt;p&gt;也即~表示的目录&lt;/p&gt;

&lt;h2 id=&quot;hostname&quot;&gt;$HOSTNAME&lt;/h2&gt;

&lt;p&gt;在系统启动时由一个初始化脚本中用hostname命令给系统指派一个名字。&lt;/p&gt;

&lt;h2 id=&quot;hosttype&quot;&gt;$HOSTTYPE&lt;/h2&gt;

&lt;p&gt;机器类型&lt;/p&gt;

&lt;p&gt;类似$MACHTYPE一样表示系统硬件&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;echo $HOSTTYPE&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;x86_64&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;ifs&quot;&gt;$IFS&lt;/h2&gt;

&lt;p&gt;内部字段分隔符，决定了bash如何分割字段，默认是空白符&lt;/p&gt;

&lt;p&gt;运行脚本如下：
```shell
#!/bin/sh&lt;/p&gt;

&lt;p&gt;function OutPutArgs(){
        for arg
        do
                echo “[$arg]”
        done
}&lt;/p&gt;

&lt;p&gt;IFS=” “
var=” a  b c  “
OutPutArgs $var&lt;/p&gt;

&lt;p&gt;IFS=”:”
var=”a::b:b:c”
OutPutArgs $var
```
结果如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[a]
[b]
[c]
[a]
[]
[b]
[b]
[c]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;ignoreeof&quot;&gt;$IGNOREEOF&lt;/h2&gt;

&lt;p&gt;忽略EOF，在控制台退出之前忽略所有的文件结尾标识&lt;/p&gt;

&lt;h2 id=&quot;lccollate&quot;&gt;$LC_COLLATE&lt;/h2&gt;

&lt;p&gt;它常常在.bashrc或/etc/profile文件里被设置，它控制文件名扩展和模式匹配的展开顺序。如果设置不当，LC_COLLATE会在文件名通配符(filename globbing)里引起不可预料的结果。&lt;/p&gt;

&lt;p&gt;到Bash2.05版本止，文件名通配符不再区分在方括号里的字符串范围中的大小写了。例如，ls [A-M]*会匹配File1.txt和file1.txt。为了保持方括号区分大小写的惯例，在/etc/profile文件和/或在~/.bashrc文件里由命令export LC_COLLATE=C把LC_COLLATE环境变量设置成C可以达到目的。&lt;/p&gt;

&lt;h2 id=&quot;lineno&quot;&gt;$LINENO&lt;/h2&gt;

&lt;p&gt;表示当前变量在shell脚本中的行数，可以用于调试shell脚本。&lt;/p&gt;

&lt;h2 id=&quot;machtype&quot;&gt;$MACHTYPE&lt;/h2&gt;

&lt;p&gt;机器类型&lt;/p&gt;

&lt;p&gt;如：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo $MACHTYPE
x86_64-apple-darwin15
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;oldpwd&quot;&gt;$OLDPWD&lt;/h2&gt;

&lt;p&gt;上一次的工作目录，即运行&lt;code class=&quot;highlighter-rouge&quot;&gt;cd -&lt;/code&gt;所到达的目录&lt;/p&gt;

&lt;h2 id=&quot;ostype&quot;&gt;$OSTYPE&lt;/h2&gt;

&lt;p&gt;操作系统类型&lt;/p&gt;

&lt;p&gt;如：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo $OSTYPE
darwin15
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;path&quot;&gt;$PATH&lt;/h2&gt;

&lt;p&gt;可执行程序的搜索路径&lt;/p&gt;

&lt;p&gt;当给出一个命令时，shell会自动在一个哈希表里搜索由PATH变量里所列的路径寻找该命令程序。$PATH变量被保存在环境变量里，是一串由冒号(:)分割的目录名的列表。通常，系统把此变量的值在/etc/profile文件和/或在~/.bashrc文件中被定义赋值。&lt;/p&gt;

&lt;p&gt;PATH=${PATH}:/opt/bin 能把/opt/bin目录加到当前现有的目录列表中去。在一个脚本中，它可以用这种方法临时地加一个目录到目录列表中去。当一个脚本退出时，此变量会恢复回原先的$PATH值(子进程不能改变父进程的环境变量)。&lt;/p&gt;

&lt;p&gt;保存在$PATH目录列表中的当前”工作目录”(./)通常因为会引发安全漏洞而被忽略。因此search path中通常没有工作目录。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo $PATH
/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;pipestatus&quot;&gt;$PIPESTATUS&lt;/h2&gt;

&lt;p&gt;此数组变量保存了最后执行的前台管道的退出状态。它不一定和最后执行的命令的退出状态一样。&lt;/p&gt;

&lt;p&gt;$PIPESTATUS数组的成员保存了每一个在管道里执行的命令各自的退出状态。$PIPESTATUS[0]保存了管道里第一个命令的退出状态，$PIPESTATUS[1]保存了管道里第二个命令的退出状态，以此类推。&lt;/p&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ls | aaa | wc
bash: aaa: command not found
       0       0       0
$ echo ${PIPESTATUS[@]}
141 127 0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;ppid&quot;&gt;$PPID&lt;/h2&gt;

&lt;p&gt;一个进程的$PPID变量保存它的父进程的进程ID(pid)。&lt;/p&gt;

&lt;h2 id=&quot;promptcommand&quot;&gt;$PROMPT_COMMAND&lt;/h2&gt;

&lt;p&gt;这个变量在主提示符前($PS1显示之前)执行它的值里保存的命令。&lt;/p&gt;

&lt;h2 id=&quot;ps1&quot;&gt;$PS1&lt;/h2&gt;

&lt;p&gt;这是主提示符（第一提示符），它能在命令行上看见。即每次输入命令时前面的那些内容。&lt;/p&gt;

&lt;h2 id=&quot;ps2&quot;&gt;$PS2&lt;/h2&gt;

&lt;p&gt;副提示符（第二提示符），它在期望有附加的输入时能看见。它显示像”&amp;gt;”的提示。即如果输一条命令如&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;for i in a
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;然后回车。通常我们看见的是&amp;gt;符号。即PS2。&lt;/p&gt;

&lt;h2 id=&quot;ps3&quot;&gt;$PS3&lt;/h2&gt;

&lt;p&gt;第三提示符。它在一个select循环里显示&lt;/p&gt;

&lt;p&gt;例如运行以下脚本：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;PS3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Choose one:&#39;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;select &lt;/span&gt;vegetable &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;beans&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;carrots&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;do
        &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Your choose is &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;vegetable&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;break
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;done

&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;运行结果类似：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1) beans
2) carrots
Choose one:1
Your choose is beans
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;ps4&quot;&gt;$PS4&lt;/h2&gt;

&lt;p&gt;第四提示符，它在用-x选项调用一个脚本时的输出的每一行开头显示。它通常显示像”+”的提示。&lt;/p&gt;

&lt;h2 id=&quot;pwd&quot;&gt;$PWD&lt;/h2&gt;

&lt;p&gt;工作目录。类似于内建命令pwd&lt;/p&gt;

&lt;h2 id=&quot;reply&quot;&gt;$REPLY&lt;/h2&gt;

&lt;p&gt;没有变量提供给read命令时的默认变量．这也适用于select命令的目录，但只是提供被选择的变量项目编号而不是变量本身的值&lt;/p&gt;

&lt;p&gt;例如执行以下脚本：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -n &lt;span class=&quot;s2&quot;&gt;&quot;Input a:&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;read

echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;a is: &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$REPLY&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt; -p &lt;span class=&quot;s2&quot;&gt;&quot;b is :&quot;&lt;/span&gt; b

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;b is: &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;REPLY is :&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$REPLY&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;得到的结果如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Input a:a
a is: a
b is :b
b is: b
REPLY is :a
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;seconds&quot;&gt;$SECONDS&lt;/h2&gt;

&lt;p&gt;脚本已运行秒数&lt;/p&gt;

&lt;h2 id=&quot;shelllopts&quot;&gt;$SHELLLOPTS&lt;/h2&gt;

&lt;p&gt;已经激活的shell选项列表，它是一个只读变量&lt;/p&gt;

&lt;h2 id=&quot;shlvl&quot;&gt;$SHLVL&lt;/h2&gt;

&lt;p&gt;SHELL的嵌套级别．指示了Bash被嵌套了多深．在命令行里，$SHLVL是1，因此在一个脚本里，它是2.&lt;/p&gt;

&lt;h2 id=&quot;tmout&quot;&gt;$TMOUT&lt;/h2&gt;

&lt;p&gt;如果&lt;em&gt;$TMOUT&lt;/em&gt;环境变量被设为非零值时间值&lt;em&gt;time&lt;/em&gt;，那么经过&lt;em&gt;time&lt;/em&gt;这么长的时间后，shell提示符会超时．这将使此shell退出登录．&lt;/p&gt;

&lt;p&gt;在Bash版本2.05b以上，可以在脚本中把&lt;em&gt;$TMOUT&lt;/em&gt;和&lt;a href=&quot;http://manual.51yip.com/shell/internal.html#READREF&quot;&gt;read&lt;/a&gt;命令结合使用&lt;/p&gt;

&lt;p&gt;有其他更复杂的在脚本中实现定时输入的方法．另一个方法是设置一个定时循环，超时时给脚本发送一个信号．这个办法要求有一个处理例程来捕捉(trap)由定时循环产生的信号&lt;/p&gt;

&lt;h2 id=&quot;uid&quot;&gt;$UID&lt;/h2&gt;

&lt;p&gt;用户ID号&lt;/p&gt;

&lt;p&gt;这是当前用户的用户标识号，它在/etc/passwd文件中记录。&lt;/p&gt;

&lt;p&gt;这是当前用户的真实ID，即使只是临时通过su命令转换成另外一个用户也会显示成转换成的ID号。$UID是个只读变量，不能在命令行或是脚本中更改它，并且它和内建命令id是有些相似的。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;位置参数&lt;/h2&gt;

&lt;h3 id=&quot;section-1&quot;&gt;$0, $1, $2,等等&lt;/h3&gt;

&lt;p&gt;位置参数由命令行传给脚本或传给一个函数，或设置(set)给一个变量&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;$&lt;/h3&gt;

&lt;p&gt;命令行参数[]或者是位置参数的数量&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;$*&lt;/h3&gt;

&lt;p&gt;所有的位置参数都被当成单个单元。&lt;/p&gt;

&lt;p&gt;”$*“必须被引号引起来&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;$@&lt;/h3&gt;

&lt;p&gt;和$*相同，但每个参数都是一个引起的字符串。那是说，参数都是没有被解析或扩展，是完整无缺地被传递的。这是说在参数列表中的每一个参数都被看作是一个单独的单元。&lt;/p&gt;

&lt;p&gt;”$@”应该被引号引起来。&lt;/p&gt;

&lt;h2 id=&quot;section-5&quot;&gt;其他特殊参数&lt;/h2&gt;

&lt;h3 id=&quot;section-6&quot;&gt;$!&lt;/h3&gt;

&lt;p&gt;在后台运行的最后一个作业的PID(进程ID)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ echo aa &amp;amp; echo bb &amp;amp; echo $!
[1] 12875
[2] 12876
12876
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-7&quot;&gt;$_&lt;/h3&gt;

&lt;p&gt;保存前一个命令最后一个参数的变量值&lt;/p&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ echo a b c
a b c
echo $_
c
$ echo
$ echo $_
echo
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-8&quot;&gt;$?&lt;/h3&gt;

&lt;p&gt;一个命令，函数或脚本自身的退出状态码，可以用于在脚本里判断运行状况。&lt;/p&gt;

&lt;h3 id=&quot;section-9&quot;&gt;$&lt;/h3&gt;

&lt;p&gt;脚本本身的进程PID。$$变量常被用于脚本中生成一个”唯一的”临时文件名. 这通常比调用mktemp还要简单。&lt;/p&gt;

&lt;h2 id=&quot;locale&quot;&gt;Locale&lt;/h2&gt;

&lt;p&gt;Locale是linux系统中多语言环境的设置接口，Locale根据计算机用户所使用的语言，所在国家或者地区，以及当地的文化传统所定义的一个软件运行时的语言环境。&lt;/p&gt;

&lt;p&gt;Locale是linux系统中多语言环境的设置接口，Locale根据计算机用户所使用的语言，所在国家或者地区，以及当地的文化传统所定义的一个软件运行时的语言环境。
locale把按照所涉及到的文化传统的各个方面分成12个大类，这12个大类分别是：&lt;/p&gt;

&lt;p&gt;1、语言符号及其分类(LC_CTYPE)
2、数字(LC_NUMERIC)
3、比较和排序习惯(LC_COLLATE)
4、时间显示格式(LC_TIME)
5、货币单位(LC_MONETARY)
6、信息主要是提示信息,错误信息,状态信息,标题,标签,按钮和菜单等(LC_MESSAGES)
7、姓名书写方式(LC_NAME)
8、地址书写方式(LC_ADDRESS)
9、电话号码书写方式(LC_TELEPHONE)
10、度量衡表达方式 (LC_MEASUREMENT)
11、默认纸张尺寸大小(LC_PAPER)
12、对locale自身包含信息的概述(LC_IDENTIFICATION)。&lt;/p&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ locale
LANG=&quot;zh_CN.UTF-8&quot;
LC_COLLATE=&quot;zh_CN.UTF-8&quot;
LC_CTYPE=&quot;zh_CN.UTF-8&quot;
LC_MESSAGES=&quot;zh_CN.UTF-8&quot;
LC_MONETARY=&quot;zh_CN.UTF-8&quot;
LC_NUMERIC=&quot;zh_CN.UTF-8&quot;
LC_TIME=&quot;zh_CN.UTF-8&quot;
LC_ALL=
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;设定locale就是设定12大类的locale分类属性，即12个LC。除了这12个变量可以设定以外，为了简便起见，还有两个变量：LC_ALL和LANG。它们之间有一个优先级的关系：LC_ALL &amp;gt; LC &amp;gt;LANG。可以这么说，LC_ALL是最上级设定或者强制设定，而LANG是默认设定值。&lt;/p&gt;

</description>
        <pubDate>Thu, 14 Apr 2016 00:00:00 +0800</pubDate>
        <link>https://fengyalv.github.io/Blogs/shell/bash%E8%84%9A%E6%9C%AC%E5%86%85%E9%83%A8%E5%8F%98%E9%87%8F.html</link>
        <guid isPermaLink="true">https://fengyalv.github.io/Blogs/shell/bash%E8%84%9A%E6%9C%AC%E5%86%85%E9%83%A8%E5%8F%98%E9%87%8F.html</guid>
        
        <category>shell</category>
        
        <category>linux</category>
        
        <category>mac</category>
        
        
        <category>shell</category>
        
      </item>
    
      <item>
        <title>第一个shell脚本</title>
        <description>&lt;h1 id=&quot;shell&quot;&gt;第一个shell脚本&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello world!&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section&quot;&gt;1、关于#！&lt;/h2&gt;

&lt;p&gt;在脚本开头的 sha-bang (#!) 是告诉系统这个文件是由特定命令解释器解释的一组命令。 那个 #! 实际上是两个字节的 魔数, 魔数是指定文件类型的特殊记号，在此是表示这是一个可执行的shell脚本（键入 man magic可了解更多的信息）。紧跟着#!的是一个路径名.这个路径名是解释这个脚本内命令的命令解释器程序的路径：可能是一个shell，也可能是一个编程语言或者是一个软件包程序。这个命令解释器能执行脚本内的命令语句。它从脚本开头（即从#!所在行的下一行）起执行，但是忽略注释行。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/sh&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#!/usr/bin/perl&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#!/usr/bin/tcl&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#!/bin/sed -f&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#!/usr/awk -f&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;上面每一个脚本头行都是不同的命令解释器，如果第一行是/bin/sh, 那就是默认的Shell(Linux系统中bash是默认的shell)，否则的话就是其他的解释器.如果使用#!/bin/sh（因为大多不同的商业UNIX都使用Bourne shell为默认shell）可以使脚本能够移植到非Linux的机器上，虽然这样做你将不能使用Bash许多特有的属性。但这样做的脚本遵循 POSIX sh标准.&lt;/p&gt;

&lt;p&gt;值得注意的是，在”#!”后面提供的路径必须是正确的，否则你运行脚本只会收到通常像”Command not found”那样的错误信息。&lt;/p&gt;

&lt;p&gt;如果脚本程序只是由一组普通的系统命令而没有使用Shell内置命令的话#!将被忽略。再次提醒使用#!/bin/sh将调用默认的命令解释器，这在Linux系统上是/bin/bash.&lt;/p&gt;

&lt;h2 id=&quot;echo&quot;&gt;2、关于echo&lt;/h2&gt;

&lt;p&gt;echo命令是一个系统的内建命令（builtin）。用于I/O操作。在这里我们利用echo命令来输出一行字符串。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;3、关于运行方式&lt;/h2&gt;

&lt;p&gt;接着尝试运行这个脚本：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Hello world!&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;可以使用的方法有(假设文件的名字为hello.sh)：&lt;/p&gt;

&lt;p&gt;1.&lt;code class=&quot;highlighter-rouge&quot;&gt;bash hello.sh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;直接使用bash脚本运行hello.sh 这个脚本&lt;/p&gt;

&lt;p&gt;2.&lt;code class=&quot;highlighter-rouge&quot;&gt;chmod +x hello.sh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;./hello.sh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;给这个脚本添加运行权限之后直接调用。运行时脚本会根据#！后面的内容确定运行脚本的程序。即使用/bin/bash 。&lt;/p&gt;

&lt;p&gt;与此类似的，我们还可以将脚本放入系统环境变量的search path里面。比如在mac下的/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin之类的目录下。这样就能够直接用&lt;code class=&quot;highlighter-rouge&quot;&gt;hello.sh&lt;/code&gt;这种方式来运行这个脚本了。&lt;/p&gt;
</description>
        <pubDate>Wed, 13 Apr 2016 00:00:00 +0800</pubDate>
        <link>https://fengyalv.github.io/Blogs/shell/%E7%AC%AC%E4%B8%80%E4%B8%AAshell%E8%84%9A%E6%9C%AC.html</link>
        <guid isPermaLink="true">https://fengyalv.github.io/Blogs/shell/%E7%AC%AC%E4%B8%80%E4%B8%AAshell%E8%84%9A%E6%9C%AC.html</guid>
        
        <category>shell</category>
        
        <category>linux</category>
        
        <category>mac</category>
        
        
        <category>shell</category>
        
      </item>
    
      <item>
        <title>Markdown Gramma</title>
        <description>&lt;h2 id=&quot;heading&quot;&gt;Heading&lt;/h2&gt;

&lt;p&gt;Heading is really simple in Markdown, you can use &lt;code class=&quot;highlighter-rouge&quot;&gt;#&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Like this:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;# H1. Heading&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&quot;h1-heading&quot;&gt;H1. Heading&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;## H2. Heading&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;h2-heading&quot;&gt;H2. Heading&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;### H3. Heading&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;h3-heading&quot;&gt;H3. Heading&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;#### H4. Heading&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;h4-heading&quot;&gt;H4. Heading&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;##### H5. Heading&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&quot;h5-heading&quot;&gt;H5. Heading&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;###### H6. Heading&lt;/code&gt;&lt;/p&gt;

&lt;h6 id=&quot;h6-heading&quot;&gt;H6. Heading&lt;/h6&gt;

&lt;p&gt;And like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-md&quot; data-lang=&quot;md&quot;&gt;Heading
======&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;heading-1&quot;&gt;Heading&lt;/h1&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-md&quot; data-lang=&quot;md&quot;&gt;Heading
&lt;span class=&quot;p&quot;&gt;-------&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;See? Really easy.&lt;/p&gt;

&lt;h2 id=&quot;font&quot;&gt;Font&lt;/h2&gt;

&lt;p&gt;There are three kinds of font in Markdown.&lt;/p&gt;

&lt;h3 id=&quot;italic&quot;&gt;Italic：&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*Italic*&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Italic&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_Italic_&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Italic&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;bold&quot;&gt;Bold：&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;**Bold**&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bold&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;__Bold__&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bold&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;italic--bold&quot;&gt;Italic &amp;amp; Bold：&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;***Italic &amp;amp; Bold***&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Italic &amp;amp; Bold&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;___Italic &amp;amp; Bold___&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Italic &amp;amp; Bold&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can also do this:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;**Markdown is _fun_**&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Markdown is &lt;em&gt;fun&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;list&quot;&gt;List&lt;/h2&gt;

&lt;h3 id=&quot;order-list&quot;&gt;Order list:&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;1. 2. 3. &lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;First&lt;/li&gt;
  &lt;li&gt;Second&lt;/li&gt;
  &lt;li&gt;Third&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;unorder-list&quot;&gt;Unorder list:&lt;/h3&gt;

&lt;p&gt;There are three ways to make a unorder list:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;* AAA&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;AAA&lt;/li&gt;
  &lt;li&gt;BBB&lt;/li&gt;
  &lt;li&gt;CCC&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;- AAA&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;AAA&lt;/li&gt;
  &lt;li&gt;BBB&lt;/li&gt;
  &lt;li&gt;CCC&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;+ AAA&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;AAA&lt;/li&gt;
  &lt;li&gt;BBB&lt;/li&gt;
  &lt;li&gt;CCC&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;block-quote&quot;&gt;Block quote&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt; War is Peace&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt; Freedom is Slavery&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt; Ignorance is Strength&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;War is Peace&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Freedom is Slavery&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Ignorance is Strength&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;引用區也可內嵌Markdown其他語法。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt; * War is Peace&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt; * Freedom is Slavery&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt; * Ignorance is Stength&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;War is Peace&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;Freedom is Slavery&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;Ignorance is Stength&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;link&quot;&gt;Link&lt;/h2&gt;

&lt;h3 id=&quot;simple-link&quot;&gt;Simple link&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;http://itisbenjamin.github.io&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://itisbenjamin.github.io&quot;&gt;http://itisbenjamin.github.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also do this when you insert an email address.&lt;/p&gt;

&lt;h3 id=&quot;link-1&quot;&gt;Link&lt;/h3&gt;

&lt;p&gt;You can add your link just behind your words:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[Ben](www.itisbenjamin.github.io)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;www.itisbenjamin.github.io&quot;&gt;Ben&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And you can also do it like this:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[Something Important][1]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then put this line at anywhere you want in your post:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[1]: some comments.&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;link-description&quot;&gt;Link description&lt;/h3&gt;

&lt;p&gt;You can add the link description behind the link address:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[Ben](www.itisbenjamin.github.io &quot;Ben&quot;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;www.itisbenjamin.github.io&quot; title=&quot;Ben&quot;&gt;Ben&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;image&quot;&gt;Image&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;![Codes](/img/code.png)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/code.png&quot; alt=&quot;Codes&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Images’ descriptions are the same as how you do it in links:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;![Codes](/img/code.png &quot;Codes&quot;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/code.png&quot; alt=&quot;Codes&quot; title=&quot;Codes&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;code&quot;&gt;Code&lt;/h2&gt;

&lt;p&gt;You can use &lt;code&gt;``&lt;/code&gt; to show your codes:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;`.default`&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.default&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you wanna show a piece of codes, use 4 spaces or 1 tab.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post-header-container&amp;gt;
  &amp;lt;div class=&quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;scrim&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;header&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post-header&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Markdown Gramma&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;info&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;by &lt;span class=&quot;nt&quot;&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;Benjamin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/strong&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/header&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;others&quot;&gt;Others&lt;/h2&gt;

&lt;h3 id=&quot;breaker&quot;&gt;Breaker&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;---&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;***&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;- - - -&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;They all show a breaker.&lt;/p&gt;

&lt;h2 id=&quot;footnote&quot;&gt;Footnote&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Something needs a footnote[^1].&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[^1]: This is a footnote.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Something needs a footnote&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;Then this footnote will show at the end of this post.&lt;/p&gt;

&lt;h2 id=&quot;delete&quot;&gt;Delete&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;~~There is no tree waiting for me.~~&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;del&gt;There is no tree waiting for me.&lt;/del&gt;&lt;/p&gt;

&lt;h2 id=&quot;table&quot;&gt;Table&lt;/h2&gt;

&lt;h3 id=&quot;a-simple-way&quot;&gt;A simple way&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A     | B     | C     | D &lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;----- | ----- | ----- | -----&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a     | b     | c     | d&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;A&lt;/th&gt;
      &lt;th&gt;B&lt;/th&gt;
      &lt;th&gt;C&lt;/th&gt;
      &lt;th&gt;D&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;a&lt;/td&gt;
      &lt;td&gt;b&lt;/td&gt;
      &lt;td&gt;c&lt;/td&gt;
      &lt;td&gt;d&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;make-words-at-left-center-or-right&quot;&gt;Make words at left, center or right&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;left      | center       | center       | right&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;:-------- | :----------: | :----------: | -----:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a         | b            | c            | d&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;left&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;center&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;center&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;right&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;a&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;b&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;c&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;d&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;This is a footnote. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 29 Mar 2016 00:00:00 +0800</pubDate>
        <link>https://fengyalv.github.io/Blogs/coding/markdown.html</link>
        <guid isPermaLink="true">https://fengyalv.github.io/Blogs/coding/markdown.html</guid>
        
        <category>code</category>
        
        <category>markdown</category>
        
        <category>github</category>
        
        
        <category>coding</category>
        
      </item>
    
  </channel>
</rss>
